<?xml version="1.0" encoding="UTF-8"?>
<project name="startreerenaissance" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.lib.classpath">
    <fileset dir="${basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module startreerenaissance -->
  
  <dirname property="module.startreerenaissance.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.startreerenaissance" value="${compiler.args}"/>
  
  <property name="startreerenaissance.output.dir" value="${module.startreerenaissance.basedir}/out/production/startreerenaissance"/>
  <property name="startreerenaissance.testoutput.dir" value="${module.startreerenaissance.basedir}/out/test/startreerenaissance"/>
  
  <path id="startreerenaissance.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="startreerenaissance.module.production.classpath">
    <path refid="library.lib.classpath"/>
    <pathelement location="${idea.home}/lib/junit-4.10.jar"/>
  </path>
  
  <path id="startreerenaissance.runtime.production.module.classpath">
    <pathelement location="${startreerenaissance.output.dir}"/>
    <path refid="library.lib.classpath"/>
    <pathelement location="${idea.home}/lib/junit-4.10.jar"/>
  </path>
  
  <path id="startreerenaissance.module.classpath">
    <pathelement location="${startreerenaissance.output.dir}"/>
    <path refid="library.lib.classpath"/>
    <pathelement location="${idea.home}/lib/junit-4.10.jar"/>
  </path>
  
  <path id="startreerenaissance.runtime.module.classpath">
    <pathelement location="${startreerenaissance.testoutput.dir}"/>
    <pathelement location="${startreerenaissance.output.dir}"/>
    <path refid="library.lib.classpath"/>
    <pathelement location="${idea.home}/lib/junit-4.10.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.startreerenaissance">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.startreerenaissance">
    <patternset refid="excluded.from.module.startreerenaissance"/>
  </patternset>
  
  <path id="startreerenaissance.module.sourcepath">
    <dirset dir="${module.startreerenaissance.basedir}">
      <include name="src"/>
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.startreerenaissance" depends="compile.module.startreerenaissance.production,compile.module.startreerenaissance.tests" description="Compile module startreerenaissance"/>
  
  <target name="compile.module.startreerenaissance.production" description="Compile module startreerenaissance; production classes">
    <mkdir dir="${startreerenaissance.output.dir}"/>
    <javac destdir="${startreerenaissance.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.startreerenaissance}"/>
      <bootclasspath refid="startreerenaissance.module.bootclasspath"/>
      <classpath refid="startreerenaissance.module.production.classpath"/>
      <src refid="startreerenaissance.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.startreerenaissance"/>
    </javac>
    
    <copy todir="${startreerenaissance.output.dir}">
      <fileset dir="${module.startreerenaissance.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.startreerenaissance.basedir}/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.startreerenaissance.tests" depends="compile.module.startreerenaissance.production" description="compile module startreerenaissance; test classes" unless="skip.tests"/>
  
  <target name="clean.module.startreerenaissance" description="cleanup module">
    <delete dir="${startreerenaissance.output.dir}"/>
    <delete dir="${startreerenaissance.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.startreerenaissance" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.startreerenaissance" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.startreerenaissance:jar" value="${basedir}/out/artifacts/startreerenaissance_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.startreerenaissance.jar" value="${artifacts.temp.dir}/startreerenaissance.jar"/>
  </target>
  
  <target name="artifact.startreerenaissance:jar" depends="init.artifacts, compile.module.startreerenaissance" description="Build &#39;startreerenaissance:jar&#39; artifact">
    <property name="artifact.temp.output.startreerenaissance:jar" value="${artifacts.temp.dir}/startreerenaissance_jar"/>
    <mkdir dir="${artifact.temp.output.startreerenaissance:jar}"/>
    <jar destfile="${temp.jar.path.startreerenaissance.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${startreerenaissance.output.dir}"/>
      <zipfileset src="${idea.home}/lib/junit-4.10.jar"/>
      <zipfileset src="${basedir}/lib/beast.jar"/>
      <zipfileset src="${basedir}/lib/sam-1.104.jar"/>
      <zipfileset src="${basedir}/lib/gson-2.2.4.jar"/>
      <zipfileset src="${basedir}/lib/guava-15.0.jar"/>
      <zipfileset src="${basedir}/lib/picard-1.104.jar"/>
    </jar>
    <copy file="${temp.jar.path.startreerenaissance.jar}" tofile="${artifact.temp.output.startreerenaissance:jar}/startreerenaissance.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.startreerenaissance:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.startreerenaissance:jar}"/>
    <copy todir="${artifact.output.startreerenaissance:jar}">
      <fileset dir="${artifact.temp.output.startreerenaissance:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>